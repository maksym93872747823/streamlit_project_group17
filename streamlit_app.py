import streamlit as st
import pandas as pd
from graphviz import Digraph

# üåÑ –§–æ–Ω–æ–≤–µ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è
page_bg_img = '''
<style>
.stApp {
    background-image: url("https://raw.githubusercontent.com/maksym93872747823/streamlit_project_group17/main/mountain_bg.jpg");
    background-size: cover;
    background-attachment: fixed;
    background-position: center;
}
</style>
'''
st.markdown(page_bg_img, unsafe_allow_html=True)

# üé® –°—Ç–∏–ª—å –¥–ª—è selectbox –∏ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤
st.markdown('''
<style>
/* –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä selectbox */
div[data-baseweb="select"] {
    background-color: rgba(255, 255, 255, 0.85) !important;
    border-radius: 8px !important;
    padding: 4px !important;
}

/* –¢–µ–∫—Å—Ç –ø–æ–¥–ø–∏—Å–∏ */
label {
    background-color: rgba(255, 255, 255, 0.85) !important;
    color: #000000 !important;
    font-weight: 600 !important;
    padding: 6px 10px;
    border-radius: 8px;
    display: inline-block;
    margin-bottom: 4px;
}

/* –ó–∞–≥–æ–ª–æ–≤–∫–∏ */
h1, .st-subheader, h2 {
    color: #000000 !important;
}
</style>
''', unsafe_allow_html=True)

# üìò –ó–∞–≥–æ–ª–æ–≤–æ–∫
st.markdown("""
    <h1 style='text-align: center; color: #F9FAFB;'>üìö <span style='color:#00BFFF'>–ú–æ–∂–ª–∏–≤–æ –≤—Å–µ</span></h1>
    <p style='text-align: center; font-size:18px; color: #000000; background-color: rgba(255,255,255,0.6); padding: 10px; border-radius: 8px;'>
        –¶–∏—Ç–∞—Ç–∏, —ñ–¥–µ—ó —Ç–∞ –Ω–∞—Ç—Ö–Ω–µ–Ω–Ω—è, –∑—ñ–±—Ä–∞–Ω—ñ –Ω–∞—à–æ—é –∫–æ–º–∞–Ω–¥–æ—é –ø—ñ–¥ —á–∞—Å –∞–Ω–∞–ª—ñ–∑—É –∫–Ω–∏–≥–∏.
    </p>
    <hr style='border: 1px solid #444;'/>
""", unsafe_allow_html=True)

# üìä –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è Google –¢–∞–±–ª–∏—Ü—ñ
url = "https://docs.google.com/spreadsheets/d/e/2PACX-1vR3cQlzWgr-dv_MC_usm7D2Lr2-XGG7HosOcMvLMQF3_e672gdHaTo8jxpJ77fwrPrwjKNyRh53IjLT/pub?output=csv"
df = pd.read_csv(url)

# üßç‚Äç‚ôÄÔ∏è –§—ñ–ª—å—Ç—Ä –ø–æ —É—á–∞—Å–Ω–∏–∫—É
if "–£—á–∞—Å–Ω–∏–∫" in df.columns:
    selected_author = st.selectbox("–û–±—Ä–∞—Ç–∏ —É—á–∞—Å–Ω–∏–∫–∞", ["–í—Å—ñ"] + sorted(df["–£—á–∞—Å–Ω–∏–∫"].dropna().unique()))
    if selected_author != "–í—Å—ñ":
        df = df[df["–£—á–∞—Å–Ω–∏–∫"] == selected_author]

# üìö –§—ñ–ª—å—Ç—Ä –ø–æ —Ä–æ–∑–¥—ñ–ª—É
if "–ù–∞–∑–≤–∞ —Ä–æ–∑–¥—ñ–ª—É" in df.columns:
    selected_chapter = st.selectbox("–û–±—Ä–∞—Ç–∏ —Ä–æ–∑–¥—ñ–ª", ["–í—Å—ñ"] + sorted(df["–ù–∞–∑–≤–∞ —Ä–æ–∑–¥—ñ–ª—É"].dropna().unique()))
    if selected_chapter != "–í—Å—ñ":
        df = df[df["–ù–∞–∑–≤–∞ —Ä–æ–∑–¥—ñ–ª—É"] == selected_chapter]

# üßæ –¢–∞–±–ª–∏—Ü—è
st.subheader("–†–µ–∑—É–ª—å—Ç–∞—Ç–∏ –ø—ñ—Å–ª—è —Ñ—ñ–ª—å—Ç—Ä–∞—Ü—ñ—ó")
st.dataframe(df)

# üß† Mind Map
st.markdown("---")
st.markdown(
    "<h2 style='text-align: center; color: black; background-color: rgba(255,255,255,0.8); padding: 8px; border-radius: 10px;'>üß† Mind Map ‚Äì –û—Å–Ω–æ–≤–Ω—ñ —ñ–Ω—Å–∞–π—Ç–∏ –∑ –∫–Ω–∏–≥–∏</h2>",
    unsafe_allow_html=True
)

dot = Digraph()
dot.attr(rankdir='LR')  # –ì–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω–æ
dot.attr(bgcolor='white')
dot.attr('node', shape='box', style='filled', fontname='Arial', fontsize='11', color='lightblue')

dot.node("–ö–Ω–∏–≥–∞", "üìò –ú–æ–∂–ª–∏–≤–æ –≤—Å–µ")

# –¢—ñ–ª—å–∫–∏ –ø–µ—Ä—à—ñ 10 —Ä—è–¥–∫—ñ–≤ (–∞–±–æ —Ñ—ñ–ª—å—Ç—Ä–æ–≤–∞–Ω—ñ)
for i, row in df.head(10).iterrows():
    chapter = row.get("–ù–∞–∑–≤–∞ —Ä–æ–∑–¥—ñ–ª—É", f"–†–æ–∑–¥—ñ–ª {i}")
    insight = str(row.get("–Ü–Ω—Å–∞–π—Ç–∏", "")).strip()
    author = str(row.get("–£—á–∞—Å–Ω–∏–∫", "")).strip()

    if chapter and insight:
        chapter_node = f"chapter_{i}"
        insight_node = f"insight_{i}"

        dot.node(chapter_node, f"üìñ {chapter}", color='lightgreen')
        dot.edge("–ö–Ω–∏–≥–∞", chapter_node)

        short = insight[:70] + "..." if len(insight) > 70 else insight
        dot.node(insight_node, f"üí° {short}\nüë§ {author}", color='lightyellow')
        dot.edge(chapter_node, insight_node)

st.graphviz_chart(dot, use_container_width=True)
